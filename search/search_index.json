{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MC Docs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mc-docs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MC Docs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"About \u00b6 This documentation is created by FrankyRayMS Using MkDocs","title":"About"},{"location":"about/#about","text":"This documentation is created by FrankyRayMS Using MkDocs","title":"About"},{"location":"test/","text":"This is just test \u00b6 This line, idk what I want to say","title":"Test"},{"location":"test/#this-is-just-test","text":"This line, idk what I want to say","title":"This is just test"},{"location":"commands/data_value/","text":"Data Values \u00b6 Data value are block/item variation. Data value can be rotation of the block, block colour, item durability, etc. Data value can be called \"Block State\" List of Data Values \u00b6 Coloured Block \u00b6 List of coloured block Concrete Concrete Powder Glazed Terracotta Shulker Box[^1] Stained Glass Stained Glass Pane Terracotta Wool block : - 0 : white - 1 : orange - 2 : magenta - 3 : light_blue - 4 : yellow - 5 : lime - 6 : pink - 7 : gray - 8 : silver - 9 : cyan - 10 : purple - 11 : blue - 12 : brown - 13 : green - 14 : red - 15 : black","title":"Data Value"},{"location":"commands/data_value/#data-values","text":"Data value are block/item variation. Data value can be rotation of the block, block colour, item durability, etc. Data value can be called \"Block State\"","title":"Data Values"},{"location":"commands/data_value/#list-of-data-values","text":"","title":"List of Data Values"},{"location":"commands/data_value/#coloured-block","text":"List of coloured block Concrete Concrete Powder Glazed Terracotta Shulker Box[^1] Stained Glass Stained Glass Pane Terracotta Wool block : - 0 : white - 1 : orange - 2 : magenta - 3 : light_blue - 4 : yellow - 5 : lime - 6 : pink - 7 : gray - 8 : silver - 9 : cyan - 10 : purple - 11 : blue - 12 : brown - 13 : green - 14 : red - 15 : black","title":"Coloured Block"},{"location":"commands/toggle/","text":"Commands T-Flip-Flop \u00b6 Lever has interesting behavior. They can turn on/off the redstone with single click. On redstone component, there's T-Flip-Flop, which same as lever, but it can do with just button. This can really useful for redstone project as it's works like lever, toggle on/off redstone circuit. But what if we used on Commands? That can be useful for commands setting to turn on/off something. For example, I want to turn day and night with commands, you can by /time set night and /time set day . But we can use it on one single function file and call the same function Setup \u00b6 This is the example of day/night toggle toggle.mcfunction 1 2 3 4 5 scoreboard players add @s toggle 1 scoreboard players set @s [ scores = { toggle = 2. . }] toggle 0 # Switchable commands execute @s { scores = { toggle = 0 }} ~ ~ ~ time set day execute @s { scores = { toggle = 1 }} ~ ~ ~ time set night Important You must add \"toggle\" objectives to make this function work. You can by adding scoreboard objectives add toggle dummy on top of the file Description: Line 1 and 2 are the Commands T-Flip-Flop . They must on line 1 and 2, or the order must add the score, then set the score Line 1 will add the score 1 everytime the function is called Line 2 will set the score into 0 if the score was 2 or more. This make the score just only 1 and 0 as on/off or true/false Line 4 will set the time into day if the score is 0 (false/off). This same on line 5, it will set the time to night if the score is 1 (true/on) This can be extend into more than 2 statement, like change the gamemode into Creative, Survival, and Adventure, etc.","title":"T-Flip-Flop"},{"location":"commands/toggle/#commands-t-flip-flop","text":"Lever has interesting behavior. They can turn on/off the redstone with single click. On redstone component, there's T-Flip-Flop, which same as lever, but it can do with just button. This can really useful for redstone project as it's works like lever, toggle on/off redstone circuit. But what if we used on Commands? That can be useful for commands setting to turn on/off something. For example, I want to turn day and night with commands, you can by /time set night and /time set day . But we can use it on one single function file and call the same function","title":"Commands T-Flip-Flop"},{"location":"commands/toggle/#setup","text":"This is the example of day/night toggle toggle.mcfunction 1 2 3 4 5 scoreboard players add @s toggle 1 scoreboard players set @s [ scores = { toggle = 2. . }] toggle 0 # Switchable commands execute @s { scores = { toggle = 0 }} ~ ~ ~ time set day execute @s { scores = { toggle = 1 }} ~ ~ ~ time set night Important You must add \"toggle\" objectives to make this function work. You can by adding scoreboard objectives add toggle dummy on top of the file Description: Line 1 and 2 are the Commands T-Flip-Flop . They must on line 1 and 2, or the order must add the score, then set the score Line 1 will add the score 1 everytime the function is called Line 2 will set the score into 0 if the score was 2 or more. This make the score just only 1 and 0 as on/off or true/false Line 4 will set the time into day if the score is 0 (false/off). This same on line 5, it will set the time to night if the score is 1 (true/on) This can be extend into more than 2 statement, like change the gamemode into Creative, Survival, and Adventure, etc.","title":"Setup"}]}